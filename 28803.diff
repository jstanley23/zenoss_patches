diff --git a/Products/ZenModel/DeviceClass.py b/Products/ZenModel/DeviceClass.py
index 8e175f2..6d3fcfe 100644
--- a/Products/ZenModel/DeviceClass.py
+++ b/Products/ZenModel/DeviceClass.py
@@ -307,7 +307,7 @@ class DeviceClass(DeviceOrganizer, ZenPackable, TemplateContainer):
                 @rtype: string
                 """
                 o = StringIO()
-                d.exportXml(o, exportPasswords=True)
+                d.exportXml(o, exportPasswords=True, move=True)
                 return switchClass(o, module, klass)
 
             def devImport(xmlfile):
@@ -331,8 +331,6 @@ class DeviceClass(DeviceOrganizer, ZenPackable, TemplateContainer):
             xmlfile = devExport(dev, module, klass)
             log.debug('Removing device %s from %s', devname, source)
             source.devices._delObject(devname)
-            # doing this search will cause the deletion to commit to solr:
-            IModelCatalogTool(self.getDmd()).search(limit=0, commit_dirty=True)
             log.debug('Importing device %s to %s', devname, target)
             devImport(xmlfile)
             exported = True
diff --git a/Products/ZenRelations/ImportRM.py b/Products/ZenRelations/ImportRM.py
index 4e1d6b2..d40b576 100644
--- a/Products/ZenRelations/ImportRM.py
+++ b/Products/ZenRelations/ImportRM.py
@@ -136,7 +136,7 @@ for a ZenPack.
              name, self.context().id, self._locator.getLineNumber() ))
 
         if name == 'object':
-            if attrs.get('class') == 'Device':
+            if attrs.get('class') == 'Device' and not attrs.get('move', False):
                 devId = attrs['id'].split('/')[-1]
                 dev = self.dmd.Devices.findDeviceByIdOrIp(devId)
                 if dev:
diff --git a/Products/ZenRelations/RelationshipManager.py b/Products/ZenRelations/RelationshipManager.py
index eef9881..139e44c 100644
--- a/Products/ZenRelations/RelationshipManager.py
+++ b/Products/ZenRelations/RelationshipManager.py
@@ -262,7 +262,7 @@ class RelationshipManager(PrimaryPathObjectManager, ZenPropertyManager):
     #
     ##########################################################################
 
-    def exportXml(self, ofile, ignorerels=[], root=False, exportPasswords=False):
+    def exportXml(self, ofile, ignorerels=[], root=False, exportPasswords=False, move=False):
         """Return an xml based representation of a RelationshipManager
         <object id='/Devices/Servers/Windows/dhcp160.confmon.loc' 
             module='Products.Confmon.IpInterface' class='IpInterface'>
@@ -275,8 +275,8 @@ class RelationshipManager(PrimaryPathObjectManager, ZenPropertyManager):
         modname = self.__class__.__module__
         classname = self.__class__.__name__
         id = root and self.getPrimaryId() or self.id
-        stag = "<object id='%s' module='%s' class='%s'>\n" % (
-                    id , modname, classname)
+        stag = "<object id='%s' module='%s' class='%s' move='%s'>\n" % (
+                    id , modname, classname, move)
         ofile.write(stag)
         zendocAdapter = zope.component.queryAdapter( self, IZenDocProvider )
         if zendocAdapter is not None: